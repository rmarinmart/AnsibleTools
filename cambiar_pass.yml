---
- name: Cambiar contraseña del usuario mantenimiento en todas las máquinas
  hosts: all:!localhost
  become: yes

  tasks:
    - name: Comprobar si existe /var/ansible/passVersion
      stat:
        path: /var/ansible/passVersion
      register: passfile

    - name: Leer contenido de /var/ansible/passVersion si existe
      slurp:
        src: /var/ansible/passVersion
      register: passfile_content
      when: passfile.stat.exists

    - name: Decidir si el host necesita actualización
      set_fact:
        necesita_actualizacion: "{{ (not passfile.stat.exists) or (passfile_content['content'] | b64decode | trim != pass_version) }}"

    - name: Cambiar contraseña del usuario mantenimiento
      user:
        name: mantenimiento
        password: "{{ nueva_pass }}"
      when: necesita_actualizacion

    - name: Crear directorio /var/ansible si no existe
      file:
        path: /var/ansible
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: necesita_actualizacion

    - name: Escribir versión en /var/ansible/passVersion
      copy:
        dest: /var/ansible/passVersion
        content: "{{ pass_version }}\n"
        owner: root
        group: root
        mode: '0444'
      when: necesita_actualizacion

    - name: Marcar host como actualizado
      add_host:
        name: "{{ inventory_hostname }}"
        groups: actualizados
      when: necesita_actualizacion

    - name: Marcar host como ya al día
      add_host:
        name: "{{ inventory_hostname }}"
        groups: sin_cambios
      when: not necesita_actualizacion